REQUIREMENTS:
    The program requires 2 other Perl modules.  One is for handling the config
    file and the other is for the handling of STDOUT and STDERR and timeouts
    when running external commands - such as looking up your IP number.
    Those 2 modules can be obtained at:
        https://github.com/rjwhite/Perl-config-module
        https://github.com/rjwhite/Perl-run-command

    This program expects those two modules to be installed in:
        /usr/local/Moxad/lib/Moxad
    ie:
        /usr/local/Moxad/lib/Moxad/Config.pm
        /usr/local/Moxad/lib/Moxad/Rcommand.pm
    That will almost certainly require a root user to install them.
    Or, you can install them in some appropriate directory in your HOME account.
    In which case, you will need to change the line in the program:
        use lib "/usr/local/Moxad/lib" ;
    to the appropriate directory.  Note above that it does not have the 2nd
    "Moxad" at the end of that line because the program supplies that with:
        use Moxad::Config ;
        use Moxad::Rcommand


INSTALLATION:
    To install, change the target locations at the top of the Makefile,
    and then:
        make install

    It will NOT install the config file. 
    Modify the SAMPLE-update-ddns.conf as required and copy it into:
        ${HOME}/.config/update-ddns/update-ddns.conf

    The Makefile is designed only for user level installs.
    I can think of no reason why you'd need or want to install this 
    program as root but that is easy to change if you like.  The required
    modules as mentioned above under "REQUIREMENTS" may require root to
    install in their default location - but this program has no special
    need for root.


TEST FOR VPN:
    If you want to have update-ddns test to see if you are using a VPN,
    then you need to set up a program to test for a VPN in use and return
    a string of 'vpn'.  The program test-for-vpn.sh will do this if your
    VPN creates the interface name 'nordtun' as it does for nordvpn.
    The SAMPLE-update-ddns.conf is currently set up for this.

    If you want this feature but are using a different VPN mechanism, then
    you will need to modify this accordingly.  If your VPN provider works
    similarly but just uses a different interface name, then you only
    need to change the argument 'nordtun' to whatever your interface name is.
    You can see what your interface name is by doing a 'ifconfig -a'
    while using your VPN.  For example, when I start up a nordvpn VPN, then
    '/sbin/ifconfig -a' will show me the 'nordtun' interface:
            ...
        nordtun: flags=4305<UP,POINTOPOINT,RUNNING,NOARP,MULTICAST>  mtu 1500
            inet 10.8.3.4  netmask 255.255.255.0  destination 10.8.3.4
             ...
    If you have some totally different mechanism, then you would need to
    modify or replace the program 'test-for-vpn.sh' to return a string of
    'vpn' if it detects a VPN in use.

    If you do not want this feature, or there is no working mechanism, then
    remove the 'vpn-test' line from your config file in the 'disable' section.
    You may then choose to use the --disable and --enable options instead
    while you are using your VPN.  Just don't forget to use --enable afterwards.

DOCUMENTATION:
    There are 3 types of documentation for this program:
        - there is a traditional man page (man 1 update-ddns)
        - there is the perldoc  (perldoc update-ddns.plx)
        - there is the mark-down README.md file as shown on Github


OTHER DNS PROVIDERS (than zoneedit):
    To add support for your DNS provider - if it is not Zoneedit - please
    see the man-page or perldoc section of "SUPPORT FOR OTHER DNS PROVIDERS"
        man 1 update-ddns
        perldoc update-ddns.plx


DEBUGGING:
    If you want to see what the program is doing, or if it has behavior
    you didn't expect, or you want to make sure it's silent behavior is
    really doing what you expect, then use the debug option (-d or --debug).


PERIODIC AUTOMATIC RUNNING:
    You probably would want to run this from your crontab.  
    My entry to run every hour is:
        43 * * * *  /home/rj/bin/update-ddns --show-success
    to run it every hour at minute 43.
